# Generated by Django 4.2.3 on 2024-03-13 09:51

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import parler.fields
import parler.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('user', 'User')], default='admin', max_length=55)),
                ('phone_number', models.CharField(max_length=14, unique=True, verbose_name='Phone number')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Attribute',
                'verbose_name_plural': 'Attributes',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='banner/%Y/%m/', verbose_name='image')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
            ],
            options={
                'verbose_name': 'Banner',
                'verbose_name_plural': 'Banners',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Basket',
                'verbose_name_plural': 'Baskets',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.ImageField(upload_to='category/', verbose_name='icon')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Flow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('clicks', models.PositiveIntegerField(default=0, verbose_name='clicks')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
            ],
            options={
                'verbose_name': 'Flow',
                'verbose_name_plural': 'Flows',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=99, verbose_name='price')),
                ('is_discount', models.BooleanField(default=False, verbose_name='is_discount')),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0'), max_digits=99, verbose_name='discount_price')),
                ('quantity', models.IntegerField(verbose_name='quantity')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='apps.category', verbose_name='category')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='product-attribute/%Y', verbose_name='image')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.attribute', verbose_name='attribute')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.product', verbose_name='product')),
            ],
            options={
                'verbose_name': 'ProductAttribute',
                'verbose_name_plural': 'ProductAttributes',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('new', 'Yangi'), ('accepted', 'Qabul qilindi'), ('delivering', 'Yetkazilmoqda'), ('completed', 'Yetkazib berildi'), ('recall', 'Qayta qo`ngiroq'), ('spam', 'Spam'), ('canceled', 'Qaytib keldi'), ('hold', 'Hold'), ('archived', 'Arxivlandi')], default='new', max_length=30, verbose_name='status')),
                ('region', models.CharField(choices=[('tashkent', 'Toshkent'), ('andijon', 'Andijon'), ('buxoro', 'Buxoro'), ('fargona', 'Fargona'), ('jizzax', 'Jizzax'), ('namangan', 'Namangan'), ('navoiy', 'Navoy'), ('qashqadaryo', 'Qashqadaryo'), ('qoraqalpogiston', 'Qoraqalpogiston'), ('samarqand', 'Samarqand'), ('sirdaryo', 'Sirdyo'), ('surxondaryo', 'Surxondaryo'), ('toshkent viloyati', 'Toshkent viloyati'), ('xorazm', 'Xorazm')], max_length=30, verbose_name='region')),
                ('customer_number', models.CharField(max_length=20, verbose_name='customer_number')),
                ('customer_name', models.CharField(max_length=50, verbose_name='customer_name')),
                ('customer_address', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='customer_address')),
                ('quantity', models.IntegerField(default=1, verbose_name='quantity')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='customer')),
                ('flow', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='apps.flow', verbose_name='flow')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.product', verbose_name='product')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('products', models.ManyToManyField(to='apps.product', verbose_name='products')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique=True, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/%Y/%m/', verbose_name='image')),
                ('is_main', models.BooleanField(default=False, verbose_name='is_main')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.product', verbose_name='product')),
            ],
        ),
        migrations.AddField(
            model_name='flow',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.product', verbose_name='product'),
        ),
        migrations.AddField(
            model_name='flow',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.CreateModel(
            name='BasketProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(verbose_name='quantity')),
                ('basket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.basket', verbose_name='basket')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.productattribute', verbose_name='product')),
            ],
            options={
                'verbose_name': 'BasketProduct',
                'verbose_name_plural': 'BasketProducts',
            },
        ),
        migrations.AddField(
            model_name='basket',
            name='products',
            field=models.ManyToManyField(through='apps.BasketProduct', to='apps.productattribute', verbose_name='products'),
        ),
        migrations.AddField(
            model_name='basket',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.CreateModel(
            name='ProductTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=255)),
                ('delivery', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translate', to='apps.product')),
            ],
            options={
                'verbose_name': 'Product Translation',
                'db_table': 'apps_product_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProductAttributeTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('value', models.CharField(max_length=255)),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translate', to='apps.productattribute')),
            ],
            options={
                'verbose_name': 'ProductAttribute Translation',
                'db_table': 'apps_productattribute_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CategoryTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translate', to='apps.category')),
            ],
            options={
                'verbose_name': 'Category Translation',
                'db_table': 'apps_category_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AttributeTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=255)),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translate', to='apps.attribute')),
            ],
            options={
                'verbose_name': 'Attribute Translation',
                'db_table': 'apps_attribute_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
